/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fulib.view;

import fulib.model.Book;
import fulib.model.BookDB;
import fulib.model.Category;
import fulib.model.CategoryDB;
import java.awt.Color;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nguye
 */
public class Workshop01 extends javax.swing.JFrame {

    DefaultTableModel dtm;
    ArrayList<Book> listBook = new ArrayList<>();
    ArrayList<Category> listCategory;

    public Workshop01() {
        initComponents();
        this.setLocationRelativeTo(null);
        dtm = (DefaultTableModel) jtbBook.getModel();

        jtbBook.getTableHeader().setBackground(new Color(16, 185, 255));
        dtm.setColumnIdentifiers(new Object[]{
            "Book ID", "Book Title", "Author", "Category", "Keyword"
        });
        listBook = BookDB.getAll();
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        listBook.forEach((b) -> {
            dtm.addRow(new Object[]{
                b.getBookID(), b.getTitle(), b.getAuthor(), b.getCategory(), b.getKeyword()
            });
        });
        listCategory = CategoryDB.getAllCategory();
        DefaultComboBoxModel dcbm = (DefaultComboBoxModel) jcbCat.getModel();
        listCategory.forEach(cat -> {
            dcbm.addElement((cat.getCatName()));
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
     * code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbBook = new javax.swing.JTable();
        jpnInput = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfBookID = new javax.swing.JTextField();
        jtfBookTitle = new javax.swing.JTextField();
        jtfBookAu = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcbCat = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jtfBookKey = new javax.swing.JTextField();
        jbtnAdd = new javax.swing.JButton();
        jbtnUpdate = new javax.swing.JButton();
        jbtnDel = new javax.swing.JButton();
        jbtnReload = new javax.swing.JButton();
        jbtnExit = new javax.swing.JButton();
        jpnSearch = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jcbSearch = new javax.swing.JComboBox<>();
        jtfSearch = new javax.swing.JTextField();
        jbtnSearch = new javax.swing.JButton();
        jbtnPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        jtbBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtbBook.setFocusable(false);
        jtbBook.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jtbBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbBookMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbBook);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
        );

        jpnInput.setBackground(new java.awt.Color(227, 224, 224));
        jpnInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Title");

        jLabel2.setText("Author");

        jLabel3.setText("Book ID");

        jtfBookID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBookID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jtfBookTitle.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBookTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jtfBookAu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBookAu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("Category");

        jcbCat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jcbCat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jcbCat.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel5.setText("Keywork");

        jtfBookKey.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBookKey.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jpnInputLayout = new javax.swing.GroupLayout(jpnInput);
        jpnInput.setLayout(jpnInputLayout);
        jpnInputLayout.setHorizontalGroup(
            jpnInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnInputLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jpnInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnInputLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfBookID, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                        .addGap(63, 63, 63)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnInputLayout.createSequentialGroup()
                        .addGroup(jpnInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnInputLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfBookAu))
                            .addGroup(jpnInputLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfBookTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)))
                        .addGap(63, 63, 63)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jpnInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbCat, javax.swing.GroupLayout.Alignment.TRAILING, 0, 225, Short.MAX_VALUE)
                    .addComponent(jtfBookKey, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );
        jpnInputLayout.setVerticalGroup(
            jpnInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnInputLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jpnInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCat, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jpnInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnInputLayout.createSequentialGroup()
                        .addGroup(jpnInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnInputLayout.createSequentialGroup()
                        .addGroup(jpnInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfBookKey, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jpnInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfBookAu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbtnAdd.setBackground(new java.awt.Color(0, 153, 0));
        jbtnAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbtnAdd.setForeground(new java.awt.Color(255, 255, 255));
        jbtnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fulib/image/add.png"))); // NOI18N
        jbtnAdd.setText("New");
        jbtnAdd.setFocusable(false);
        jbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddActionPerformed(evt);
            }
        });

        jbtnUpdate.setBackground(new java.awt.Color(0, 51, 204));
        jbtnUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbtnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jbtnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fulib/image/update.png"))); // NOI18N
        jbtnUpdate.setText("Update");
        jbtnUpdate.setFocusable(false);
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });

        jbtnDel.setBackground(new java.awt.Color(255, 0, 102));
        jbtnDel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbtnDel.setForeground(new java.awt.Color(255, 255, 255));
        jbtnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fulib/image/delete.png"))); // NOI18N
        jbtnDel.setText("Delete");
        jbtnDel.setFocusable(false);
        jbtnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDelActionPerformed(evt);
            }
        });

        jbtnReload.setBackground(new java.awt.Color(255, 153, 0));
        jbtnReload.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbtnReload.setForeground(new java.awt.Color(255, 255, 255));
        jbtnReload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fulib/image/baseline_settings_backup_restore_white_18dp.png"))); // NOI18N
        jbtnReload.setText("Reload");
        jbtnReload.setDefaultCapable(false);
        jbtnReload.setFocusable(false);
        jbtnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnReloadActionPerformed(evt);
            }
        });

        jbtnExit.setBackground(new java.awt.Color(204, 0, 0));
        jbtnExit.setForeground(new java.awt.Color(255, 255, 255));
        jbtnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fulib/image/close.png"))); // NOI18N
        jbtnExit.setText("Exit");
        jbtnExit.setFocusable(false);
        jbtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExitActionPerformed(evt);
            }
        });

        jpnSearch.setBackground(new java.awt.Color(227, 224, 224));
        jpnSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setText("Search By");

        jcbSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jcbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Title", "Author", "Category", "Keyword" }));
        jcbSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jtfSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jbtnSearch.setBackground(new java.awt.Color(102, 255, 255));
        jbtnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fulib/image/search.png"))); // NOI18N
        jbtnSearch.setText("Search");
        jbtnSearch.setFocusable(false);
        jbtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnSearchLayout = new javax.swing.GroupLayout(jpnSearch);
        jpnSearch.setLayout(jpnSearchLayout);
        jpnSearchLayout.setHorizontalGroup(
            jpnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jcbSearch, 0, 236, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addComponent(jtfSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addComponent(jbtnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpnSearchLayout.setVerticalGroup(
            jpnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnSearchLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jpnSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jbtnPrint.setBackground(new java.awt.Color(0, 102, 102));
        jbtnPrint.setForeground(new java.awt.Color(255, 255, 255));
        jbtnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fulib/image/print.png"))); // NOI18N
        jbtnPrint.setText("Print");
        jbtnPrint.setFocusable(false);
        jbtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpnInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jbtnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnDel, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnReload, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnExit, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                        .addGap(36, 36, 36)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jpnInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnAdd)
                    .addComponent(jbtnUpdate)
                    .addComponent(jbtnDel)
                    .addComponent(jbtnReload)
                    .addComponent(jbtnExit)
                    .addComponent(jbtnPrint))
                .addGap(30, 30, 30)
                .addComponent(jpnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jbtnExitActionPerformed

    private void jbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddActionPerformed
        String bookid = jtfBookID.getText();
        String title = jtfBookTitle.getText();
        String author = jtfBookAu.getText();
        String cat = listCategory.get(jcbCat.getSelectedIndex()).getCatId();
        String key = jtfBookKey.getText();
        if (!bookid.matches("^B\\d{4}$")) {
            JOptionPane.showMessageDialog(rootPane, "Book Id must be in format Bxxxx, x is digit");
        } else if (BookDB.getBook(bookid) != null) {
            JOptionPane.showMessageDialog(rootPane, "Book Id can not be duplicate");
        } else {
            Book newBook = new Book(bookid, title, author, cat, key);
            BookDB.addNewBook(newBook);
            listBook.add(newBook);
            loadToTable();
        }
    }//GEN-LAST:event_jbtnAddActionPerformed

    public void loadToTable() {
        int i = listBook.size() - 1;
        dtm.addRow(new Object[]{
            listBook.get(i).getBookID(), listBook.get(i).getTitle(), listBook.get(i).getAuthor(),
            listBook.get(i).getCategory(), listBook.get(i).getKeyword()
        });
    }

    private void jtbBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbBookMouseClicked
        int rowSelected = jtbBook.getSelectedRow();
        jtfBookID.setText(dtm.getValueAt(rowSelected, 0).toString());
        jtfBookTitle.setText(dtm.getValueAt(rowSelected, 1).toString());
        jtfBookAu.setText(dtm.getValueAt(rowSelected, 2).toString());
        jcbCat.setSelectedIndex(getIndexCategory(dtm.getValueAt(rowSelected, 3).toString()));
        jtfBookKey.setText(dtm.getValueAt(rowSelected, 4).toString());
    }//GEN-LAST:event_jtbBookMouseClicked

    public int getIndexCategory(String cat) {
        for (int i = 0; i < listCategory.size(); i++) {
            if (cat.equalsIgnoreCase(listCategory.get(i).getCatId())) {
                return i;
            }
        }
        return -1;
    }

    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
        int rowSelected = jtbBook.getSelectedRow();
        if (rowSelected == -1) {
            JOptionPane.showMessageDialog(rootPane, "You must be select a row need update");
        } else if (jtbBook.getRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Table is empty");
        } else {
            if (!jtfBookID.getText().matches("^B\\d{4}$")) {
                JOptionPane.showMessageDialog(rootPane, "Book Id must be in format Bxxxx, x is digit");
            } else {
                Book b = new Book(jtfBookID.getText(), jtfBookTitle.getText(), jtfBookAu.getText(),
                        listCategory.get(jcbCat.getSelectedIndex()).getCatId(), jtfBookKey.getText());
                if (BookDB.updateBook(b)) {
                    dtm.setValueAt(jtfBookID.getText(), rowSelected, 0);
                    dtm.setValueAt(jtfBookTitle.getText(), rowSelected, 1);
                    dtm.setValueAt(jtfBookAu.getText(), rowSelected, 2);
                    dtm.setValueAt(listCategory.get(jcbCat.getSelectedIndex()).getCatId(), rowSelected, 3);
                    dtm.setValueAt(jtfBookKey.getText(), rowSelected, 4);
                }
            }
        }
    }//GEN-LAST:event_jbtnUpdateActionPerformed

    private void jbtnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDelActionPerformed
        int rowSelected = jtbBook.getSelectedRow();
        if (rowSelected == -1) {
            JOptionPane.showMessageDialog(rootPane, "You must be select a row need update");
        } else if (jtbBook.getRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Table is empty");
        } else {
            Book b = new Book(jtfBookID.getText(), jtfBookTitle.getText(), jtfBookAu.getText(),
                    listCategory.get(jcbCat.getSelectedIndex()).getCatName(), jtfBookKey.getText());
            if (BookDB.deleteBook(b)) {
                dtm.removeRow(rowSelected);
                jtfBookID.setText("");
                jtfBookTitle.setText("");
                jtfBookAu.setText("");
                jcbCat.setSelectedIndex(0);
                jtfBookKey.setText("");
            }
        }
    }//GEN-LAST:event_jbtnDelActionPerformed

    private void jbtnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnReloadActionPerformed
        listBook = BookDB.getAll();
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        for (Book b : listBook) {
            dtm.addRow(new Object[]{
                b.getBookID(), b.getTitle(), b.getAuthor(), b.getCategory(), b.getKeyword()
            });
        }
    }//GEN-LAST:event_jbtnReloadActionPerformed

    private void jbtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchActionPerformed
        ArrayList<Book> listSearch = new ArrayList<>();
        Book bookID = null;
        int i = jcbSearch.getSelectedIndex();
        switch (i) {
            case 0:
                bookID = BookDB.getBook(jtfSearch.getText());
                if (bookID != null) {
                    listSearch.add(bookID);
                }
                break;
            case 1:
                listSearch = BookDB.searchByTitle(jtfSearch.getText());
                break;
            case 2:
                listSearch = BookDB.searchByAuthor(jtfSearch.getText());
                break;
            case 3:
                listSearch = BookDB.searchByCategory(jtfSearch.getText());
                break;
            case 4:
                listSearch = BookDB.searchByKeyword(jtfSearch.getText());
                break;
        }
        if (listSearch.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No any books were found ");
        } else {
            while (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
            }
            for (Book b : listSearch) {
                dtm.addRow(new Object[]{
                    b.getBookID(), b.getTitle(), b.getAuthor(), b.getCategory(), b.getKeyword()
                });
            }
        }
    }//GEN-LAST:event_jbtnSearchActionPerformed

    private void jbtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPrintActionPerformed
        MessageFormat header = new MessageFormat("Books");
        MessageFormat footer = new MessageFormat("");
        try {
            this.jtbBook.print(Workshop01.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException e) {
        }
    }//GEN-LAST:event_jbtnPrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Workshop02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Workshop02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Workshop02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Workshop02.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Workshop01().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnAdd;
    private javax.swing.JButton jbtnDel;
    private javax.swing.JButton jbtnExit;
    private javax.swing.JButton jbtnPrint;
    private javax.swing.JButton jbtnReload;
    private javax.swing.JButton jbtnSearch;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JComboBox<String> jcbCat;
    private javax.swing.JComboBox<String> jcbSearch;
    private javax.swing.JPanel jpnInput;
    private javax.swing.JPanel jpnSearch;
    private javax.swing.JTable jtbBook;
    private javax.swing.JTextField jtfBookAu;
    private javax.swing.JTextField jtfBookID;
    private javax.swing.JTextField jtfBookKey;
    private javax.swing.JTextField jtfBookTitle;
    private javax.swing.JTextField jtfSearch;
    // End of variables declaration//GEN-END:variables

    private static class PrintMode {

        private static JTable.PrintMode FIT_WIDTH;

        public PrintMode() {

        }
    }
}
